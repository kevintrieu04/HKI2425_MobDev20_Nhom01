This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-11T13:36:24.280Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
ads.json
main.py
movie.json
requirement.txt

================================================================
Repository Files
================================================================

================
File: ads.json
================
[
  {
    "id": "1",
    "img_src": "https://d1csarkz8obe9u.cloudfront.net/themedlandingpages/tlp_hero_preview_theatre-ads-612364969bad450017f58b99c2c9e9ae-1615276012.jpg"
  },
  {
    "id": "2",
    "img_src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSvFCAGDBuoAJ2WJCJ4v5oCAJXYHp_VFLMDUbhoc3JeAnCP75Qc2YCSr-mQFqdNR1dIpSA&usqp=CAU"
  },
  {
    "id": "3",
    "img_src": "https://www.scannain.com/media/cinema-day-23-1-770x434.jpg"
  }
]

================
File: main.py
================
from flask import Flask, jsonify, request
import requests
import json

app = Flask(__name__)

# TMDB Authorization Token (Bearer Token)
BEARER_TOKEN = "eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzY2ZhZTI1YmZiYzRlYjQyM2JmM2MxNWIxNjg5ODJiOSIsIm5iZiI6MTczMzM1NTc2My4wOCwic3ViIjoiNjc1MGU4ZjM0NDg0N2U5N2RmZjQxYWM3Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.aj-iNUSRQu2gTi6uri5-uiL1eYJEI9p-f_DXC5iJs5g"
TMDB_BASE_URL = "https://api.themoviedb.org/3"

# TMDB Headers với Bearer Token
HEADERS = {
    "accept": "application/json",
    "Authorization": f"Bearer {BEARER_TOKEN}"
}


# đọc dữ liệu từ file JSON
def read_json(file_name):
    with open(file_name, 'r', encoding='utf-8') as file:
        return json.load(file)


# Route: Lấy danh sách phim phổ biến
@app.route('/movie', methods=['GET'])
def get_movies():
    url = f"{TMDB_BASE_URL}/movie/popular?language=en-US&page=1"
    response = requests.get(url, headers=HEADERS)

    if response.status_code == 200:
        data = response.json()
        results = []
        for movie in data['results']:
            results.append({
                "id": str(movie.get("id")),
                "title": movie.get("title", "Unknown Title"),
                "img_src": f"https://image.tmdb.org/t/p/w500{movie.get('poster_path', '')}",
                "type": "Unknown",
                "duration": "120 min",
                "rating": str(movie.get("vote_average", "0")),
                "synopsis": movie.get("overview", "No synopsis available."),
                "isPlaying": True
            })
        return jsonify(results)
    else:
        return jsonify({"error": "Failed to fetch data from TMDB"}), response.status_code


# Route: Tìm kiếm phim theo từ khóa
@app.route('/search', methods=['GET'])
def search_movies():
    query = request.args.get('query')  # Lấy từ khóa từ query parameter
    if not query:
        return jsonify({"error": "Query parameter is required"}), 400

    url = f"{TMDB_BASE_URL}/search/movie?language=en-US&query={query}"
    response = requests.get(url, headers=HEADERS)

    if response.status_code == 200:
        data = response.json()
        return jsonify(data['results'])
    else:
        return jsonify({"error": "Failed to fetch data from TMDB"}), response.status_code


# Route: Lấy danh sách quảng cáo từ file JSON
@app.route('/ads', methods=['GET'])
def get_ads():
    try:
        data = read_json('ads.json')
        return jsonify(data)
    except FileNotFoundError:
        return jsonify({"error": "ads.json file not found"}), 404
    except json.JSONDecodeError:
        return jsonify({"error": "Error decoding ads.json"}), 500


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)

================
File: movie.json
================
[
  {
    "id": "1",
    "title": "Mèo đi Hia: Điều ước cuối cùng",
    "img_src": "https://iguov8nhvyobj.vcdn.cloud/media/catalog/product/cache/1/image/c5f0a1eff4c394a251036189ccddaacd/p/u/puss_in_boots_30.12.22_700x1000px.png",
    "type": "Phiêu lưu",
    "duration": "103 phút",
    "rating": "7.8/10",
    "synopsis": "Puss phát hiện ra rằng niềm đam mê phiêu lưu mạo hiểm của anh đã gây ra hậu quả: Anh đã đốt cháy 8 trong số 9 mạng sống của mình, bây giờ chỉ còn lại đúng một mạng. Anh ta bắt đầu một cuộc hành trình để tìm Điều ước cuối cùng thần thoại trong Rừng Đen nhằm khôi phục lại chín mạng sống của mình. Chỉ còn một mạng sống, đây có lẽ sẽ là cuộc hành trình nguy hiểm nhất của Puss. ",
    "isPlaying": true
  },
  {
    "id": "2",
    "title": "Minions: Sự trỗi dậy của Gru",
    "img_src": "https://iguov8nhvyobj.vcdn.cloud/media/catalog/product/cache/1/image/c5f0a1eff4c394a251036189ccddaacd/m/i/minions_2_-_kc_01.7.22_1_.jpg",
    "type": "Hoạt hình",
    "duration": "88 phút",
    "rating": "6.5/10",
    "synopsis": "Rất lâu trước khi trở thành một phản diện chuyên nghiệp, Gru chỉ là một cậu bé 12 tuổi sống ở vùng ngoại ô vào những năm 1970, với ước mơ một ngày sẽ làm \"bá chủ\" thế giới. Và 3 \"quả chuối\" vàng biết đi từ trên trời rơi xuống đã là những đồng đội đầu tiên của Gru, bên cạnh ủng hộ cậu bé, cùng nhau thiết kế những vũ khí đầu tiên, thực hiện những phi vụ đầu tiên.",
    "isPlaying": true
  },
  {
    "id": "3",
    "title": "Người Nhện: Du hành vũ trụ nhện",
    "img_src": "https://iguov8nhvyobj.vcdn.cloud/media/catalog/product/cache/1/image/c5f0a1eff4c394a251036189ccddaacd/r/s/rsz_spiderverse2_poster_4.jpg",
    "type": "Hành Động",
    "duration": "140 phút",
    "rating": "8.6/10",
    "synopsis": "Miles Morales tái xuất trong phần tiếp theo của bom tấn hoạt hình từng đoạt giải Oscar - Spider-Man: Across the Spider-Verse. Sau khi gặp lại Gwen Stacy, chàng Spider-Man thân thiện đến từ Brooklyn phải du hành qua đa vũ trụ và gặp một nhóm Người Nhện chịu trách nhiệm bảo vệ các vũ trụ song song. Nhưng khi nhóm siêu anh hùng xung đột về cách xử lý một mối đe dọa mới, Miles buộc phải đọ sức với các Người Nhện khác và phải xác định lại ý nghĩa của việc trở thành một người hùng để có thể cứu những người cậu yêu thương nhất. ",
    "isPlaying": true
  }
]

================
File: requirement.txt
================
Flask==2.3.2
requests==2.31.0
